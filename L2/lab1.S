/* За методою, стандартний ARM набір */
    .syntax unified
    .cpu cortex-m4
    .thumb

/* Вхідні констатнти */
    #define a  10              /* перший операнд середнього */
    #define b  6              /* другий операнд середьно */
    #define c  5              /* для обчислення факторіалу */

    .global lab1
    .type lab1, %function
lab1:
    push    {lr}    /* Прокидаємо LR у стек для коректного виходу з програми */
    mov     r1, #a  /* вантажимо а до регістру */
    add     r1, r1, #b  /* складаємо a + b, результат у r1 */
    lsr     r1, r1, #1  /* ділимо суму на 2 за допомогою логічного зсуву вправо (одного) */
    mov     r2, #1  /* перше значення факторіалу до регістру */
    mov     r3, #c  /* ініціалізуємо лічильник циклу для факторіалу */
fact_loop:
    mul     r2, r2, r3        /* Накопичений факторіал на поточне значення лічильника */
    subs    r3, r3, #1        /* Декрементуємо лічильник */
    bne     fact_loop         /* Якщо лічильник не дорівнює нулю, повретаємось до fac_loop */
    add     r0, r1, r2        /* Фінальний обрахунок (a+b)/2 та c! і записуємо результат у r0 */
    pop     {pc}              /* Відновлюємо адрес повернення і виконуємо вихід з функції */
    .size lab1, .-lab1
